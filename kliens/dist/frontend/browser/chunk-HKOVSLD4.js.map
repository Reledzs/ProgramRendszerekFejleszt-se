{
  "version": 3,
  "sources": ["src/app/signup/signup.component.ts", "src/app/signup/signup.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthService } from '../shared/services/auth.service';\r\n\r\n//FormsModul, ReactiveFormsModule\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  imports: [ReactiveFormsModule, CommonModule],\r\n  templateUrl: './signup.component.html',\r\n  styleUrl: './signup.component.scss'\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupForm!: FormGroup;\r\n\r\n  constructor(private formBuilder:FormBuilder,\r\n    private location:Location,\r\n    private authService:AuthService){}\r\n\r\n  ngOnInit(){\r\n    this.signupForm=this.formBuilder.group({\r\n      email: ['',[Validators.required,Validators.email]],\r\n      name: [''],\r\n      address: [''],\r\n      nickname: [''],\r\n      password: ['',[Validators.required,Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    },{\r\n      validator: this.mustMatch('password','confirmPassword')\r\n    });\r\n  }\r\n  mustMatch(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) =>{\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n      \r\n      if(matchingControl.errors&&matchingControl.errors['mustMatch']){\r\n        return;\r\n      }\r\n      if(control.value !==matchingControl.value){\r\n        matchingControl.setErrors({mustMatch:true});\r\n      }else{\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n  onSubmit(){\r\n    if(this.signupForm.valid){\r\n      console.log('Form data:', this.signupForm.value);\r\n      this.authService.register(this.signupForm.value);\r\n    }\r\n    else{\r\n      console.log(\"Form not valid!\");\r\n    }\r\n\r\n  }\r\n\r\n}\r\n", "<div class=\"login-container\">\r\n    <form class=\"login-form\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\"> \r\n        <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" required [ngClass]=\"{'invalid-input': signupForm.get('email')?.errors}\"/>\r\n        <div *ngIf=\"signupForm.get('email')?.invalid && signupForm.get('email')?.touched\">\r\n            <p *ngIf=\"signupForm.get('email')?.errors && signupForm.get('email')?.errors!['required']\">Email is required.</p>\r\n            <p *ngIf=\"signupForm.get('email')?.errors && signupForm.get('email')?.errors!['email']\">Email is invalid.</p>\r\n        </div>\r\n        <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" required/>\r\n        <input formControlName=\"address\" type=\"text\" placeholder=\"Address\" required/>\r\n        <input formControlName=\"nickname\" type=\"text\" placeholder=\"Nickname\" required/>\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" required/>\r\n        <div *ngIf=\"signupForm.get('password')?.invalid && signupForm.get('password')?.dirty || signupForm.get('password')?.touched\">\r\n            <p *ngIf=\"signupForm.get('password')?.errors && signupForm.get('password')?.errors!['required']\">Password is required</p>\r\n            <p *ngIf=\"signupForm.get('password')?.errors && signupForm.get('password')?.errors!['minlength']\">Must be at least 6 characters.</p>\r\n        </div>\r\n        <input formControlName=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" required/>\r\n        <div *ngIf=\"signupForm.get('confirmPassword')?.invalid && signupForm.get('confirmPassword')?.dirty || signupForm.get('confirmPassword')?.touched\">\r\n            <p *ngIf=\"signupForm.get('confirmPassword')?.errors && signupForm.get('confirmPassword')?.errors!['required']\">Password is required</p>\r\n            <p *ngIf=\"signupForm.get('confirmPassword')?.errors && signupForm.get('confirmPassword')?.errors!['mustMatch']\">Passwords doesnt match</p>\r\n        </div>\r\n        <div class=\"buttons\">\r\n            <button type=\"submit\">Sign up</button>\r\n        </div>\r\n    </form>\r\n</div>"],
  "mappings": "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",
  "names": []
}
